# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  id: Int
  username: String!
  firstname: String
  lastname: String
  completedSignUp: Boolean!
  age: Float
  email: String!
  localization: String
  telNumber: String
  isConfirmed: Boolean!
  sentEmails: [Email!]
  Jobs: [User!]
  lowerCasedUsername: String!
  gender: Gender
  roles: [UserRoleEnum!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum Gender {
  MALE
  FEMALE
}

enum UserRoleEnum {
  ADMIN
  USER
}

type CryptographicJob {
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  JobId: String!
  description: String!
  jobType: ProcessorType!
  sourcePath: String
  outputPath: String
  sourceType: SourceTypeEnum!
  owner: User!
  cronString: String
  startDate: DateTime
  endDate: DateTime
  lastExecutionDate: DateTime
  lastExecutionStatus: ExecutionStatusEnum
  attemptsMade: Float
  failedReason: String
  stacktrace: String
  finishedOn: DateTime
  processedOn: DateTime
  ancestorJob: CryptographicJob
  childJobs: [CryptographicJob!]
  jobTypeSpec: EncDecType!
}

enum ProcessorType {
  ENCRYPTION
  DECRYPTION
  COMPRESSION
  DECOMPRESSION
}

enum SourceTypeEnum {
  FILE
  DIRECTORY
}

enum ExecutionStatusEnum {
  SUCCESS
  FAILED
  PAUSED
  CANCELED
  DELAYED
  WAITING
  ACTIVE
}

enum EncDecType {
  PGP
  HYBRID
}

type Email {
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
  id: Int
  sentDate: DateTime!
  emailType: EmailTypeEnum!
  sender: User!
  token: String!
  verificationToken: String!
  isExpired: Boolean
}

enum EmailTypeEnum {
  CONFIRMATION
  RESET_PASSWORD
}

type Query {
  firstStageSignUp(firstStageUserInput: FirstStageUserInput!): User!
}

input FirstStageUserInput {
  username: String!
  email: String!
  password: String!
}
