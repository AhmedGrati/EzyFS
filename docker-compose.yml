version: '3.7'

services:
  core:
    container_name: ${APP_NAME}-CORE
    build:
      context: .
      dockerfile: apps/core/Dockerfile
    image: ezyfs-core:latest
    # volumes:
    #   - .:/usr/src/app
    #   - /usr/src/app/node_modules
    ports:
      - ${PORT}:${PORT}
    # command: npx nest start --watch
    env_file:
      - apps/core/.env
    networks:
      - webnet
    depends_on:
      - postgres
  registration_authority:
    container_name: ${APP_NAME}-REGISTRATION_AUTHORITY
    build:
      context: .
      dockerfile: apps/registration-authority/Dockerfile
    image: ezyfs-registration-authority:latest
    # volumes:
    # - .:/usr/src/app
    # - /usr/src/app/node_modules
    ports:
      - 3001:3001
    # command: npx nest start --watch
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - postgres
  postgres:
    container_name: postgres
    image: postgres
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', 'postgres', '-U', 'postgres']
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}	
      # - APP_DB_USER=docker
      # - APP_DB_PASS=docker
      # - APP_DB_NAME=docker
    networks:
      - webnet
    env_file:
      - apps/core/.env
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    container_name: ${REDIS_HOST}
    image: 'redis:alpine'
    command:
      - redis-server
    networks:
      - webnet
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - ./redis-data:/var/lib/redis
      - ./redis.conf:/usr/local/etc/redis/redis.conf

networks:
  webnet:
volumes:
  pgdata:
